package sec1;
//비선점형 : 쓰레드객체.run()
//선점형 : 쓰레드객체.start()
//쓰레드 주기설정 : Thread.sleep()
//쓰레드 우선순위 설정 : 쓰레드객체,setPriority()
//쓰레드 우선순위 값 가져오기 : 쓰레드객체.getPrirory
//쓰레드 의 상태
//생성(New Thread) : Create -> 실행 대기(new runnable) : wait -> 실행(start(), run()
//=>선점(bloking=preempiton -> 대기(sleep)) : wait -> 재실행(run()) : Wake up
//=> 정상종료(Inerrupt)


public class ThreadEx2 {

	public static void main(String[] args) {
		Thread th0 = new Thread(new ThreadWithRunnable());
		Thread th1 = new Thread(new ThreadWithRunnable());
		
		//쓰레드의 우선순위 변경 : 먼저 처리 되기 위해서
		th1.setPriority(10);
		
		th0.start();
		th1.start();
		
		System.out.println("th0의 우선순위: "+th0.getPriority());
		System.out.println("th1의 우선순위: "+th0.getPriority());
		
	}

}
class ThreadWithClass2 extends Thread{
	public void run(){
		for(int i=0;i<5;i++){
			System.out.println(this.getName());
			try {
				Thread.sleep(100);				//1000밀리초(ms)= 1초이므로 0.01초
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} 		
		}
	}
	
}
class ThreadWithRunnable implements Runnable {

	@Override
	public void run() {
		for(int i=0;i<5;i++){
			
		}
		
	}
}
	